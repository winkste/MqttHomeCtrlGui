/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import control.btnIntface;
import myMqtt.MqttSubscriber;

/**
 *
 * @author winkste
 */
public class homeAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form homeTempPanel
     */
    public homeAreaPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        carport_sjl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        kitchen_sjl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        livRoom_sjl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        hall_sjl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        guestWc_sjl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        outside_sjl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMaximumSize(new java.awt.Dimension(595, 333));
        jPanel1.setMinimumSize(new java.awt.Dimension(595, 333));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(595, 333));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Carport");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 80, 30));

        carport_sjl.setBackground(new java.awt.Color(255, 255, 255));
        carport_sjl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        carport_sjl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        carport_sjl.setText("(+12°C/10%)");
        jPanel1.add(carport_sjl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 130, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Küche");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, 50, -1));

        kitchen_sjl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        kitchen_sjl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        kitchen_sjl.setText("(+12°C/40%)");
        jPanel1.add(kitchen_sjl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 160, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Wohnzimmer");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, -1, -1));

        livRoom_sjl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        livRoom_sjl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        livRoom_sjl.setText("(+12°C/40%)");
        jPanel1.add(livRoom_sjl, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 140, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Flur");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        hall_sjl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        hall_sjl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hall_sjl.setText("(+12°C/40%)");
        jPanel1.add(hall_sjl, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, -1, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Gäste WC");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, -1, -1));

        guestWc_sjl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        guestWc_sjl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guestWc_sjl.setText("(+12°C/40%)");
        jPanel1.add(guestWc_sjl, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Außen");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        outside_sjl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        outside_sjl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        outside_sjl.setText("(-05°C/40%)");
        outside_sjl.setToolTipText("");
        jPanel1.add(outside_sjl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/home/eg.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, 0, 920, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel carport_sjl;
    private javax.swing.JLabel guestWc_sjl;
    private javax.swing.JLabel hall_sjl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel kitchen_sjl;
    private javax.swing.JLabel livRoom_sjl;
    private javax.swing.JLabel outside_sjl;
    // End of variables declaration//GEN-END:variables
    String carportTemp_str = "-07.00°C";
    String carportHum_str = "50.0%";    
    String livingTemp_str = "-07.00°C";
    String livingHum_str = "50.0%";
    String hallTemp_str = "-07.00°C";
    String hallHum_str = "50.0%";
    String kitchenTemp_str = "-07.00°C";
    String kitchenHum_str = "50.0%";
    
    public MqttSubscriber getMqttSubscriberCarportTemperature(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                carportTemp_str = msg + "°C";
                carport_sjl.setText("(" + carportTemp_str + "/" + carportHum_str + ")");
            }
        });
    }
    
    public MqttSubscriber getMqttSubscriberCarportHumidity(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                carportHum_str = msg + "°C";
                carport_sjl.setText("(" + carportTemp_str + "/" + carportHum_str + ")");
            }
        });
    }
    
    
    public MqttSubscriber getMqttSubscriberLivingTemperature(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                livingTemp_str = msg + "°C";
                livRoom_sjl.setText("(" + livingTemp_str + "/" + livingHum_str + ")");
            }
        });
    }
    
    public MqttSubscriber getMqttSubscriberLivingHumidity(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                livingHum_str = msg + "°C";
                livRoom_sjl.setText("(" + livingTemp_str + "/" + livingHum_str + ")");
            }
        });
    }
    
    
    public MqttSubscriber getMqttSubscriberHallTemperature(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                hallTemp_str = msg + "°C";
                hall_sjl.setText("(" + hallTemp_str + "/" + hallHum_str + ")");
            }
        });
    }
    
    public MqttSubscriber getMqttSubscriberHallHumidity(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                hallHum_str = msg + "°C";
                hall_sjl.setText("(" + hallTemp_str + "/" + hallHum_str + ")");
            }
        });
    }
    
    public MqttSubscriber getMqttSubscriberKitchenTemperature(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                kitchenTemp_str = msg + "°C";
                kitchen_sjl.setText("(" + kitchenTemp_str + "/" + kitchenHum_str + ")");
            }
        });
    }
    
    public MqttSubscriber getMqttSubscriberKitchenHumidity(String filter) {
        return(new MqttSubscriber(){
            @Override
            public String getFilter() {
                return(filter);
            }

            @Override
            public void notify(String msg) {
                kitchenHum_str = msg + "°C";
                kitchen_sjl.setText("(" + kitchenTemp_str + "/" + kitchenHum_str + ")");
            }
        });
    }
}
